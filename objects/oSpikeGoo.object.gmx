<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSpikeGoo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>oEnemyParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = 100;
speed = 240 / room_speed;
direction = random(360);
dmg = 45;
spawnCount = 5500 / room_speed;
isCollideCount = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Movement
image_angle = direction;

// Reset image size
if (image_xscale &lt; 1) {
    image_xscale += 0.05;
    image_yscale += 0.05;
}

// AI
if (instance_exists(oPlayer)) {
    move_towards_point(oPlayer.x, oPlayer.y, speed);
}

// Collisions
EnemyBoundaryCollide();
EnemyWithEnemyCollision();

// Bullet
var incomingProjectile = instance_place(x, y, oPlayerProjectile);

if (instance_exists(incomingProjectile)) {
    hp -= incomingProjectile.dmg;
    image_xscale = 0.65;
    image_yscale = image_xscale;
    
    // generate some gibs
    for (var i = 0; i &lt; 6; i++) {
        var babyGib = instance_create(x, y, oBabyGib);
        babyGib.direction = random(360);
    }
    
    audio_play_sound(aHitSound, 1, false);
    
    if (instance_exists(oPlayer) &amp;&amp; oPlayer.currentGun != oShotgunBullet) {
        with (incomingProjectile) {
            instance_destroy();
        }
    }
    
    if (hp &lt; 0) {
        score += 15;
        GeneratePickup(x, y);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSpikeGoo">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Prevent overlap
var dir = point_direction(other.x, other.y, x, y);
x += lengthdir_x(1, dir);
y += lengthdir_y(1, dir);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
