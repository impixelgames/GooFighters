<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>oEnemyParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
* Enemy moves in a random direction, bouces off walls
*/
hp = 100;
speed = 190 / room_speed;
direction = random(360);
dmg = 0;
spawnCount = 5500 / room_speed; // prevent spawn kills
isCollideCount = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction;

// Reset image size
if (image_xscale &lt; 1) {
    image_xscale += 0.05;
    image_yscale += 0.05;
}

spawnCount--;
if (spawnCount &lt; 0){ 
    dmg = 105;
}

// Bounding Collision
EnemyBoundaryCollide();
EnemyWithEnemyCollision();

// Collision with a projectile
var incomingProjectile = instance_place(x, y, oPlayerProjectile);

if (instance_exists(incomingProjectile)) {
    // Explode into chunks
    // Define numChunks and speed here so that they are randomly generated on 
    // object creation.

    // Deal damage
    hp -= incomingProjectile.dmg;
    image_xscale = 0.65;
    image_yscale = image_xscale;
    
    // Play hitsound
    audio_play_sound(aHitSound, 1, false);
    
    if (instance_exists(oPlayer) &amp;&amp; oPlayer.currentGun != oShotgunBullet){
        with (incomingProjectile) {
            instance_destroy();
        }
    }
    
    if (hp &lt; 0) {
        score += 10;
        
        var numChunks = random_range(15, 20);
        var bitSpeed = 500 / room_speed;
        
        for (var chunk = 0; chunk &lt; numChunks; chunk++) {
            var newChunk = instance_create(x, y, oExplodingEnemyChunk);
            newChunk.direction = random(360);
            newChunk.speed = random_range(bitSpeed/2, bitSpeed);
        }
        
        // Enemy spawning now found in oGame step.
        /*var spawnLoc = random_range(1, 3);
        var spawnEnemyX;
        var spawnEnemyY;
        
        if (spawnLoc == 1) {
            spawnEnemyX = 0;
        } else {
            spawnEnemyX = room_width - 50;
        }
        
        var newEnemy = instance_create(spawnEnemyX, 
                                       random(room_height), 
                                       object_index);                            
        newEnemy.health = 100;*/
        
        GeneratePickup(x, y);
        instance_destroy();    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
