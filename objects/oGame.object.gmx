<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Game Settings */
window_set_fullscreen(false);

//var screenWidth = display_get_width();
//var screenHeight = display_get_height();
var screenWidth = 1080;
var screenHeight = 720;

window_set_size(screenWidth, screenHeight);

// set how much of the room to view on screen
view_wview = screenWidth;
view_hview = screenHeight;

// how much of screen to take up
view_wport = screenWidth;
view_hport = screenHeight;

// TODO: lookup
// fit screen, match perfectly
surface_resize(application_surface, screenWidth, screenHeight);

// Set custom cursor
window_set_cursor(cr_none);
cursor_sprite = sCursor;

// Spawning enemies count
explodingCount = 100;
spikeCount = 200;
kingCount = 2200;

// Stop spawn of other enemies if king goo is alive
kingAlive = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Spawn a king goo

Stop all other spawns of other enemies
*/

var newKing = instance_create(oKingSpawn.x, oKingSpawn.y, oKingGoo);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Spawn a Spikey Goo

Location: spikeSpawn object in Default Room
*/

newEnemy = instance_create(oSpikeSpawn.x, oSpikeSpawn.y, oSpikeGoo);
//newEnemy.hp = 100;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Spawn an Exploding Goo

Location: Random along left or right edges of Default Room
*/

var spawnLoc = random_range(1, 3);
var spawnEnemyX;
var spawnEnemyY;
    
if (spawnLoc == 1) {
    spawnEnemyX = 0;
} else {
    spawnEnemyX = room_width - 50;
}

newEnemy = instance_create(spawnEnemyX, random(room_height), oExplodingEnemy);
//newEnemy.hp = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Exit
if (keyboard_check_pressed(vk_escape)) {
    game_end();
}

// Restart
if (keyboard_check_pressed(ord("R"))) {
    game_restart();
}

if (instance_exists(oKingGoo)) {
    kingAlive = true; 
} else {
    kingAlive = false;
}

if (explodingCount &lt;= 0 &amp;&amp; !kingAlive) {
    explodingCount = 150;
    alarm[0] = 80;
}
if (spikeCount &lt;= 0 &amp;&amp; !kingAlive) {
    spikeCount = 200;
    alarm[1] = 80;
}
if (kingCount &lt;= 0 &amp;&amp; !kingAlive) {
    kingCount = 2200;
    alarm[2] = 80;
}
explodingCount--;
spikeCount--;
if (!kingAlive) { kingCount--; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Display score
draw_text(view_xview[view_current] + 20, 
          view_yview[view_current] + 20, 
          "Score: " + string(score));

if (instance_exists(oPlayer)) {
    draw_text(view_xview[view_current] + 160, 
              view_yview[view_current] + 20, 
              "Health: " + string(oPlayer.health));          
} else {
    draw_text(view_xview[view_current] + 160, 
              view_yview[view_current] + 20, 
              "Dead.");          
}
          
draw_set_font(fScore);
draw_set_color(c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
